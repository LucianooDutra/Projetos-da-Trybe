{"ast":null,"code":"var _jsxFileName = \"/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/pages/ProfileEdit.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Carregando from '../components/Carregando';\nimport semImagem from '../images/semImagem.png';\nimport { getUser, updateUser } from '../services/userAPI';\nimport '../css/profileEdit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileEdit extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      image: '',\n      name: '',\n      disabled: true,\n      email: '',\n      description: '',\n      carregando: false,\n      redirecionar: false\n    };\n\n    this.componentDidMount = async () => {\n      this.setState({\n        carregando: true\n      });\n      const userInfo = await getUser();\n      const {\n        name,\n        email,\n        description,\n        image\n      } = userInfo;\n      this.setState({\n        carregando: false,\n        name,\n        image,\n        description,\n        email\n      }, this.conferirPossibilidade);\n    };\n\n    this.conferirPossibilidade = () => {\n      const {\n        description,\n        email,\n        image,\n        name\n      } = this.state; // busquei essa formula de teste de email no stackoverflow\n\n      const regex = /\\S+@\\S+\\.\\S+/;\n      const testEmail = regex.test(email);\n\n      if (name.length > 0 && email.length > 0 && description.length > 0 && image.length > 0 && testEmail) {\n        this.setState({\n          disabled: false\n        });\n      } else {\n        this.setState({\n          disabled: true\n        });\n      }\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target: {\n          name,\n          value\n        }\n      } = _ref;\n      this.setState({\n        [name]: value\n      });\n      this.conferirPossibilidade();\n    };\n\n    this.atualizarPerfil = () => {\n      const {\n        name,\n        email,\n        image,\n        description\n      } = this.state;\n      this.setState({\n        carregando: true\n      });\n      updateUser({\n        name,\n        email,\n        image,\n        description\n      }).then(() => {\n        this.setState({\n          carregando: false,\n          redirecionar: true\n        });\n      });\n    };\n\n    this.perfil = () => {\n      const {\n        description,\n        email,\n        image,\n        name,\n        disabled\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image || semImagem,\n            alt: name,\n            width: \"200px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"NomeUsuario\",\n            children: [\"Nome\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"NomeUsuario\",\n              placeholder: \"Seu nome de perfil\",\n              \"data-testid\": \"edit-input-name\",\n              onChange: this.handleChange,\n              name: \"name\",\n              value: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"EmailUsuario\",\n            children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"EmailUsuario\",\n              placeholder: \"Seu email de cadastro\",\n              \"data-testid\": \"edit-input-email\",\n              onChange: this.handleChange,\n              name: \"email\",\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"DescricaolUsuario\",\n            children: [\"Descri\\xE7\\xE3o\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"DescricaolUsuario\",\n              placeholder: \"Uma breve descri\\xE7\\xE3o sobre voc\\xEA\",\n              \"data-testid\": \"edit-input-description\",\n              onChange: this.handleChange,\n              name: \"description\",\n              value: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"FotoUsuario\",\n            children: [\"Imagem\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"FotoUsuario\",\n              placeholder: \"Sua foto de perfil\",\n              \"data-testid\": \"edit-input-image\",\n              onChange: this.handleChange,\n              name: \"image\",\n              value: image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            \"data-testid\": \"edit-button-save\",\n            disabled: disabled,\n            onClick: this.atualizarPerfil,\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  render() {\n    const {\n      carregando,\n      redirecionar\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-profile-edit\",\n      \"data-testid\": \"page-profile-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-profile-edit-data\",\n        children: [redirecionar && /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this), carregando ? /*#__PURE__*/_jsxDEV(Carregando, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 26\n        }, this) : this.perfil()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"ProfileEdit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ProfileEdit;","map":{"version":3,"sources":["/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/pages/ProfileEdit.js"],"names":["React","Redirect","Header","Carregando","semImagem","getUser","updateUser","ProfileEdit","Component","state","image","name","disabled","email","description","carregando","redirecionar","componentDidMount","setState","userInfo","conferirPossibilidade","regex","testEmail","test","length","handleChange","target","value","atualizarPerfil","then","perfil","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Carregando from '../components/Carregando';\nimport semImagem from '../images/semImagem.png';\nimport { getUser, updateUser } from '../services/userAPI';\nimport '../css/profileEdit.css';\n\nclass ProfileEdit extends React.Component {\n  state = {\n    image: '',\n    name: '',\n    disabled: true,\n    email: '',\n    description: '',\n    carregando: false,\n    redirecionar: false,\n  }\n\n  // Função que carrega minha pag com os dados que forneci anteriormente.\n  componentDidMount = async () => {\n    this.setState({ carregando: true });\n    const userInfo = await getUser();\n    const { name, email, description, image } = userInfo;\n    this.setState({\n      carregando: false,\n      name,\n      image,\n      description,\n      email },\n    this.conferirPossibilidade);\n  }\n\n  // função que confere as minhas possibilidades pra depois liberar meu button pra enviar.\n  conferirPossibilidade = () => {\n    const { description, email, image, name } = this.state;\n    // busquei essa formula de teste de email no stackoverflow\n    const regex = /\\S+@\\S+\\.\\S+/;\n    const testEmail = regex.test(email);\n\n    if (name.length > 0\n      && email.length > 0 && description.length > 0 && image.length > 0 && testEmail) {\n      this.setState({ disabled: false });\n    } else {\n      this.setState({ disabled: true });\n    }\n  }\n\n  // função generica pra colocar meus dados nos states\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value,\n    });\n\n    this.conferirPossibilidade();\n  }\n\n  // função que atualiza meu perfil, mando meus dados pra minha API e ativo o redirecionar\n  atualizarPerfil = () => {\n    const { name, email, image, description } = this.state;\n    this.setState({ carregando: true });\n    updateUser({ name, email, image, description }).then(() => {\n      this.setState({\n        carregando: false,\n        redirecionar: true,\n      });\n    });\n  };\n\n  perfil = () => {\n    const { description, email, image, name, disabled } = this.state;\n    return (\n      <form>\n        <div>\n          <img src={ image || semImagem } alt={ name } width=\"200px\" />\n        </div>\n        <div>\n          <label htmlFor=\"NomeUsuario\">\n            Nome\n            <input\n              type=\"text\"\n              id=\"NomeUsuario\"\n              placeholder=\"Seu nome de perfil\"\n              data-testid=\"edit-input-name\"\n              onChange={ this.handleChange }\n              name=\"name\"\n              value={ name }\n            />\n          </label>\n          <label htmlFor=\"EmailUsuario\">\n            Email\n            <input\n              type=\"email\"\n              id=\"EmailUsuario\"\n              placeholder=\"Seu email de cadastro\"\n              data-testid=\"edit-input-email\"\n              onChange={ this.handleChange }\n              name=\"email\"\n              value={ email }\n            />\n          </label>\n          <label htmlFor=\"DescricaolUsuario\">\n            Descrição\n            <textarea\n              id=\"DescricaolUsuario\"\n              placeholder=\"Uma breve descrição sobre você\"\n              data-testid=\"edit-input-description\"\n              onChange={ this.handleChange }\n              name=\"description\"\n              value={ description }\n            />\n          </label>\n          <label htmlFor=\"FotoUsuario\">\n            Imagem\n            <input\n              type=\"text\"\n              id=\"FotoUsuario\"\n              placeholder=\"Sua foto de perfil\"\n              data-testid=\"edit-input-image\"\n              onChange={ this.handleChange }\n              name=\"image\"\n              value={ image }\n            />\n          </label>\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            data-testid=\"edit-button-save\"\n            disabled={ disabled }\n            onClick={ this.atualizarPerfil }\n          >\n            Salvar\n          </button>\n        </div>\n      </form>\n    );\n  }\n\n  render() {\n    const { carregando, redirecionar } = this.state;\n    return (\n      <div className=\"page-profile-edit\" data-testid=\"page-profile-edit\">\n        <div>\n          <Header />\n        </div>\n        <div className=\"page-profile-edit-data\">\n          { redirecionar && <Redirect to=\"/profile\" /> }\n          { carregando ? <Carregando /> : this.perfil() }\n        </div>\n        <p>ProfileEdit</p>\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n"]},"metadata":{},"sourceType":"module"}