{"ast":null,"code":"var _jsxFileName = \"/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // import { addSong, removeSong } from '../services/favoriteSongsAPI';\n\nimport Carregando from './Carregando';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      carregando: false // checked: false,\n\n    };\n\n    this.listaMusicas = () => {\n      // const {\n      //   musica: { trackName, previewUrl, collectionName, trackId }, image } = this.props;\n      // TESTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n      const {\n        musica,\n        favSong,\n        isChecked,\n        image\n      } = this.props;\n      const {\n        previewUrl,\n        trackName,\n        trackId,\n        collectionName\n      } = musica; // TESTE \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n      // const { checked } = this.state;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          \"data-testid\": \"audio-component\",\n          src: previewUrl,\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"track\", {\n            kind: \"captions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: trackName,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: trackName,\n            \"data-testid\": `checkbox-music-${trackId}` // onClick={ (event) => (this.checkedMusica(event, addSong)) }\n            // onChange={ (event) => (!checked\n            //   ? this.checkedMusica(event, addSong)\n            //   : this.checkedMusica(event, removeSong)) }\n            // checked={ checked }\n            ,\n            checked: isChecked,\n            onChange: favSong,\n            name: JSON.stringify(musica)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), \"Favorita\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  render() {\n    const {\n      carregando\n    } = this.state;\n    return carregando ? /*#__PURE__*/_jsxDEV(Carregando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 26\n    }, this) : this.listaMusicas();\n  }\n\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string,\n  previewUrl: PropTypes.string\n}.isRequired; // TESTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// MusicCard.propTypes = {\n//   musica: PropTypes.objectOf.isRequired,\n//   favSong: PropTypes.func.isRequired,\n//   isChecked: PropTypes.bool.isRequired,\n//   // image: PropTypes.string,isRequired,\n// };\n\nexport default MusicCard;","map":{"version":3,"sources":["/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/components/MusicCard.js"],"names":["React","PropTypes","Carregando","MusicCard","Component","state","carregando","listaMusicas","musica","favSong","isChecked","image","props","previewUrl","trackName","trackId","collectionName","JSON","stringify","render","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,UAAU,EAAE,KADN,CAEN;;AAFM,KAD4B;;AAAA,SA6BtCC,YA7BsC,GA6BvB,MAAM;AACnB;AACA;AACA;AACA,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,OAAV;AAAmBC,QAAAA,SAAnB;AAA8BC,QAAAA;AAA9B,UAAwC,KAAKC,KAAnD;AACA,YAAM;AAAEC,QAAAA,UAAF;AAAcC,QAAAA,SAAd;AAAyBC,QAAAA,OAAzB;AAAkCC,QAAAA;AAAlC,UAAqDR,MAA3D,CALmB,CAMnB;AACA;;AACA,0BACE;AAAA,gCACE;AAAK,UAAA,GAAG,EAAGG,KAAX;AAAmB,UAAA,GAAG,EAAGK;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,yBAAY,iBAAnB;AAAqC,UAAA,GAAG,EAAGD,UAA3C;AAAwD,UAAA,QAAQ,MAAhE;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,4DAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAWE;AAAO,UAAA,OAAO,EAAGC,SAAjB;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,EAAE,EAAGA,SAFP;AAGE,2BAAe,kBAAiBC,OAAQ,EAH1C,CAIE;AACA;AACA;AACA;AACA;AARF;AASE,YAAA,OAAO,EAAGL,SATZ;AAUE,YAAA,QAAQ,EAAGD,OAVb;AAWE,YAAA,IAAI,EAAGQ,IAAI,CAACC,SAAL,CAAeV,MAAf;AAXT;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA8BD,KAnEqC;AAAA;;AAqEtCW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,WAAQC,UAAU,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAoB,KAAKC,YAAL,EAAtC;AACD;;AAxEqC;;AA2ExCJ,SAAS,CAACiB,SAAV,GAAsB;AACpBN,EAAAA,SAAS,EAAEb,SAAS,CAACoB,MADD;AAEpBR,EAAAA,UAAU,EAAEZ,SAAS,CAACoB;AAFF,EAGpBC,UAHF,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAenB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Carregando from './Carregando';\n\nclass MusicCard extends React.Component {\n    state = {\n      carregando: false,\n      // checked: false,\n    };\n\n    // componentDidMount() {\n    //   this.checkLocalStorage();\n    // }\n\n    // checkLocalStorage = () => {\n    //   const checkStorage = JSON.parse(localStorage.getItem('favorite_songs'));\n    //   const { musica: { trackName } } = this.props;\n    //   const some = checkStorage.some((item) => item.trackName === trackName);\n\n    //   this.setState({ checked: some });\n    // }\n\n    // // Função que ao cliclar no meu checked ele recebe um event e a API AddSoong\n    // checkedMusica = ({ target }, callback) => {\n    // // Antes de chamar minha API coloca a mensagem de carregando pra aparecer, e no meu checked armazeno meu target que é quem originou aquele evento com id da musica.\n    //   this.setState({ carregando: true, checked: target.checked });\n    //   //   console.log(target);\n    //   const { props: { musica } } = this;\n\n    //   // Após chamar minha API volto pra o state de carregando false, pra retirar minha mensagem.\n    //   callback(musica).then(() => this.setState({ carregando: false }));\n    // }\n\n  listaMusicas = () => {\n    // const {\n    //   musica: { trackName, previewUrl, collectionName, trackId }, image } = this.props;\n    // TESTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    const { musica, favSong, isChecked, image } = this.props;\n    const { previewUrl, trackName, trackId, collectionName } = musica;\n    // TESTE \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n    // const { checked } = this.state;\n    return (\n      <div>\n        <img src={ image } alt={ collectionName } />\n        <p>{trackName}</p>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n          O seu navegador não suporta o elemento\n          <code>\n            audio\n          </code>\n          .\n        </audio>\n        <label htmlFor={ trackName }>\n          <input\n            type=\"checkbox\"\n            id={ trackName }\n            data-testid={ `checkbox-music-${trackId}` }\n            // onClick={ (event) => (this.checkedMusica(event, addSong)) }\n            // onChange={ (event) => (!checked\n            //   ? this.checkedMusica(event, addSong)\n            //   : this.checkedMusica(event, removeSong)) }\n            // checked={ checked }\n            checked={ isChecked }\n            onChange={ favSong }\n            name={ JSON.stringify(musica) }\n          />\n          Favorita\n        </label>\n      </div>\n    );\n  }\n\n  render() {\n    const { carregando } = this.state;\n    return (carregando ? <Carregando /> : this.listaMusicas());\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string,\n  previewUrl: PropTypes.string,\n}.isRequired;\n\n// TESTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// MusicCard.propTypes = {\n//   musica: PropTypes.objectOf.isRequired,\n//   favSong: PropTypes.func.isRequired,\n//   isChecked: PropTypes.bool.isRequired,\n//   // image: PropTypes.string,isRequired,\n// };\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}