{"ast":null,"code":"var _jsxFileName = \"/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Carregando from './Carregando';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      carregando: false,\n      checked: false\n    };\n\n    this.checkLocalStorage = () => {\n      const armStorage = JSON.parse(localStorage.getItem('favorite_songs'));\n      const {\n        musica: {\n          trackName\n        }\n      } = this.props; // .some pra percorrer buscando se ao menos 1 elemento é igual ao trackName\n\n      const confere = armStorage.some(musica => musica.trackName === trackName); // O item que passou pelo check será armazenado no checked\n\n      this.setState({\n        checked: confere\n      });\n    };\n\n    this.checkedMusica = (_ref, callback) => {\n      let {\n        target\n      } = _ref;\n      // Antes de chamar minha API coloca a mensagem de carregando pra aparecer, e no meu checked armazeno meu target que é quem originou aquele evento com id da musica.\n      this.setState({\n        carregando: true,\n        checked: target.checked\n      }); //   console.log(target);\n\n      const {\n        props: {\n          musica\n        }\n      } = this; // Após chamar minha API volto pra o state de carregando false, pra retirar minha mensagem.\n\n      callback(musica).then(() => this.setState({\n        carregando: false\n      }));\n    };\n\n    this.listaMusicas = () => {\n      const {\n        musica: {\n          trackName,\n          previewUrl,\n          collectionName,\n          trackId\n        },\n        image\n      } = this.props;\n      const {\n        checked\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divMusicCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divMusicCard2\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divMusicCardInt\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: trackName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n              \"data-testid\": \"audio-component\",\n              src: previewUrl,\n              controls: true,\n              children: [/*#__PURE__*/_jsxDEV(\"track\", {\n                kind: \"captions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 15\n              }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"audio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: trackName,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"divMusicCardInput\",\n            type: \"checkbox\",\n            id: trackName,\n            \"data-testid\": `checkbox-music-${trackId}` // onClick={ (event) => (this.checkedMusica(event, addSong)) }\n            ,\n            onChange: event => !checked ? this.checkedMusica(event, addSong) : this.checkedMusica(event, removeSong),\n            checked: checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), \"Favorita\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  // Função que chama toda vez que abrir a checagem do localStorage\n  componentDidMount() {\n    this.checkLocalStorage();\n  } // Checagem do meu localStorage, pega o meus dados, e o transforma pra o formato original\n\n\n  render() {\n    const {\n      carregando\n    } = this.state;\n    return carregando ? /*#__PURE__*/_jsxDEV(Carregando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 26\n    }, this) : this.listaMusicas();\n  }\n\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string,\n  previewUrl: PropTypes.string\n}.isRequired;\nexport default MusicCard;","map":{"version":3,"sources":["/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/components/MusicCard.js"],"names":["React","PropTypes","addSong","removeSong","Carregando","MusicCard","Component","state","carregando","checked","checkLocalStorage","armStorage","JSON","parse","localStorage","getItem","musica","trackName","props","confere","some","setState","checkedMusica","callback","target","then","listaMusicas","previewUrl","collectionName","trackId","image","event","componentDidMount","render","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Carregando from './Carregando';\n\nclass MusicCard extends React.Component {\n    state = {\n      carregando: false,\n      checked: false,\n    };\n\n    // Função que chama toda vez que abrir a checagem do localStorage\n    componentDidMount() {\n      this.checkLocalStorage();\n    }\n\n    // Checagem do meu localStorage, pega o meus dados, e o transforma pra o formato original\n    checkLocalStorage = () => {\n      const armStorage = JSON.parse(localStorage.getItem('favorite_songs'));\n      const { musica: { trackName } } = this.props;\n      // .some pra percorrer buscando se ao menos 1 elemento é igual ao trackName\n      const confere = armStorage.some((musica) => musica.trackName === trackName);\n\n      // O item que passou pelo check será armazenado no checked\n      this.setState({ checked: confere });\n    }\n\n    // Função que ao cliclar no meu checked ele recebe um event e a API AddSoong\n    checkedMusica = ({ target }, callback) => {\n    // Antes de chamar minha API coloca a mensagem de carregando pra aparecer, e no meu checked armazeno meu target que é quem originou aquele evento com id da musica.\n      this.setState({ carregando: true, checked: target.checked });\n      //   console.log(target);\n      const { props: { musica } } = this;\n\n      // Após chamar minha API volto pra o state de carregando false, pra retirar minha mensagem.\n      callback(musica).then(() => this.setState({ carregando: false }));\n    }\n\n  listaMusicas = () => {\n    const {\n      musica: { trackName, previewUrl, collectionName, trackId }, image } = this.props;\n    const { checked } = this.state;\n    return (\n      <div className=\"divMusicCard\">\n        <div className=\"divMusicCard2\">\n          <img src={ image } alt={ collectionName } />\n          <div className=\"divMusicCardInt\">\n            <p>{trackName}</p>\n            <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n              <track kind=\"captions\" />\n              O seu navegador não suporta o elemento\n              <code>\n                audio\n              </code>\n              .\n            </audio>\n          </div>\n        </div>\n        <label htmlFor={ trackName }>\n          <input\n            className=\"divMusicCardInput\"\n            type=\"checkbox\"\n            id={ trackName }\n            data-testid={ `checkbox-music-${trackId}` }\n            // onClick={ (event) => (this.checkedMusica(event, addSong)) }\n            onChange={ (event) => (!checked\n              ? this.checkedMusica(event, addSong)\n              : this.checkedMusica(event, removeSong)) }\n            checked={ checked }\n          />\n          Favorita\n        </label>\n      </div>\n    );\n  }\n\n  render() {\n    const { carregando } = this.state;\n    return (carregando ? <Carregando /> : this.listaMusicas());\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string,\n  previewUrl: PropTypes.string,\n}.isRequired;\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}