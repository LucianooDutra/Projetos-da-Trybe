{"ast":null,"code":"var _jsxFileName = \"/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong } from '../services/favoriteSongsAPI';\nimport Carregando from './Carregando'; // import checkeds from '../images2/checkeds.jpeg';\n// import checkedbranco from '../images2/checkedbranco.png';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      carregando: false,\n      checked: false\n    };\n\n    this.addFavoriteSong = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        musica\n      } = this.props;\n      console.log(musica);\n      this.setState({\n        carregando: true,\n        checked: target.checked\n      }, async () => {\n        await addSong(musica);\n        this.setState({\n          carregando: false\n        });\n      });\n    };\n\n    this.listaMusicas = () => {\n      const {\n        props: {\n          musica: {\n            trackName,\n            previewUrl,\n            collectionName,\n            trackId\n          },\n          image\n        },\n        state: {\n          checked\n        }\n      } = this;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          \"data-testid\": \"audio-component\",\n          src: previewUrl,\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"track\", {\n            kind: \"captions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: trackName,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: trackName,\n            \"data-testid\": `checkbox-music-${trackId}`,\n            onClick: event => !checked && this.addFavoriteSong(event) // onChange={ (event) => (this.handleSong(event, addSong)) }\n            ,\n            checked: checked,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), \"Favorita\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  render() {\n    const {\n      carregando\n    } = this.state;\n    return carregando ? /*#__PURE__*/_jsxDEV(Carregando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 26\n    }, this) : this.listaMusicas();\n  }\n\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string,\n  previewUrl: PropTypes.string\n}.isRequired;\nexport default MusicCard;","map":{"version":3,"sources":["/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/components/MusicCard.js"],"names":["React","PropTypes","addSong","Carregando","MusicCard","Component","state","carregando","checked","addFavoriteSong","target","musica","props","console","log","setState","listaMusicas","trackName","previewUrl","collectionName","trackId","image","event","render","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;AACA;;;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,OAAO,EAAE;AAFH,KAD4B;;AAAA,SAMpCC,eANoC,GAMlB,QAAgB;AAAA,UAAf;AAAEC,QAAAA;AAAF,OAAe;AAChC,YAAM;AAAEC,QAAAA;AAAF,UAAa,KAAKC,KAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,WAAKI,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,OAAO,EAAEE,MAAM,CAACF;AAApC,OAAd,EAA6D,YAAY;AACvE,cAAMN,OAAO,CAACS,MAAD,CAAb;AACA,aAAKI,QAAL,CAAc;AAAER,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD,OAHD;AAID,KAbmC;;AAAA,SA0BtCS,YA1BsC,GA0BvB,MAAM;AACnB,YAAM;AACJJ,QAAAA,KAAK,EAAE;AAAED,UAAAA,MAAM,EAAE;AAAEM,YAAAA,SAAF;AAAaC,YAAAA,UAAb;AAAyBC,YAAAA,cAAzB;AAAyCC,YAAAA;AAAzC,WAAV;AAA8DC,UAAAA;AAA9D,SADH;AAEJf,QAAAA,KAAK,EAAE;AAAEE,UAAAA;AAAF;AAFH,UAGF,IAHJ;AAIA,0BACE;AAAA,gCACE;AAAK,UAAA,GAAG,EAAGa,KAAX;AAAmB,UAAA,GAAG,EAAGF;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,yBAAY,iBAAnB;AAAqC,UAAA,GAAG,EAAGC,UAA3C;AAAwD,UAAA,QAAQ,MAAhE;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,4DAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAWE;AAAO,UAAA,OAAO,EAAGD,SAAjB;AAAA,kCAME;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,EAAE,EAAGA,SAFP;AAGE,2BAAe,kBAAiBG,OAAQ,EAH1C;AAIE,YAAA,OAAO,EAAIE,KAAD,IAAY,CAACd,OAAD,IAAY,KAAKC,eAAL,CAAqBa,KAArB,CAJpC,CAKE;AALF;AAME,YAAA,OAAO,EAAGd,OANZ;AAOE,YAAA,MAAM;AAPR;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA+BD,KA9DqC;AAAA;;AAgEtCe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,WAAQC,UAAU,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAoB,KAAKS,YAAL,EAAtC;AACD;;AAnEqC;;AAsExCZ,SAAS,CAACoB,SAAV,GAAsB;AACpBP,EAAAA,SAAS,EAAEhB,SAAS,CAACwB,MADD;AAEpBP,EAAAA,UAAU,EAAEjB,SAAS,CAACwB;AAFF,EAGpBC,UAHF;AAKA,eAAetB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong } from '../services/favoriteSongsAPI';\nimport Carregando from './Carregando';\n// import checkeds from '../images2/checkeds.jpeg';\n// import checkedbranco from '../images2/checkedbranco.png';\n\nclass MusicCard extends React.Component {\n    state = {\n      carregando: false,\n      checked: false,\n    };\n\n    addFavoriteSong = ({ target }) => {\n      const { musica } = this.props;\n      console.log(musica);\n      this.setState({ carregando: true, checked: target.checked }, async () => {\n        await addSong(musica);\n        this.setState({ carregando: false });\n      });\n    }\n\n    // handleSong = ({ target }, callback) => {\n    //   this.setState({ carregando: true, checked: target.checked });\n    //   const { props: { musica, onChange } } = this;\n\n    //   if (onChange) {\n    //     onChange();\n    //   }\n\n    //   callback(musica).then(() => this.setState({ carregando: false }));\n    // }\n\n  listaMusicas = () => {\n    const {\n      props: { musica: { trackName, previewUrl, collectionName, trackId }, image },\n      state: { checked },\n    } = this;\n    return (\n      <div>\n        <img src={ image } alt={ collectionName } />\n        <p>{trackName}</p>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n          O seu navegador n√£o suporta o elemento\n          <code>\n            audio\n          </code>\n          .\n        </audio>\n        <label htmlFor={ trackName }>\n          {/* <img\n            src={ checked ? checkeds : checkedbranco }\n            alt=\"set favorite\"\n            className=\"heart-icon\"\n          /> */}\n          <input\n            type=\"checkbox\"\n            id={ trackName }\n            data-testid={ `checkbox-music-${trackId}` }\n            onClick={ (event) => (!checked && this.addFavoriteSong(event)) }\n            // onChange={ (event) => (this.handleSong(event, addSong)) }\n            checked={ checked }\n            hidden\n          />\n          Favorita\n        </label>\n      </div>\n    );\n  }\n\n  render() {\n    const { carregando } = this.state;\n    return (carregando ? <Carregando /> : this.listaMusicas());\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string,\n  previewUrl: PropTypes.string,\n}.isRequired;\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}