{"ast":null,"code":"var _jsxFileName = \"/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport '../css/album.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      musicas: ''\n    };\n\n    this.album = () => {\n      const {\n        musicas\n      } = this.state;\n\n      if (musicas) {\n        const {\n          artistName,\n          collectionName,\n          artworkUrl100\n        } = musicas[0];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"albumCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: artworkUrl100,\n            alt: collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            \"data-testid\": \"artist-name\",\n            children: artistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            \"data-testid\": \"album-name\",\n            children: collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.musicas = () => {\n      const {\n        musicas\n      } = this.state;\n\n      if (musicas) {\n        const {\n          artworkUrl100\n        } = musicas[0];\n        return musicas.map((musica, index) => {\n          const {\n            trackName\n          } = musica;\n          return index !== 0 && /*#__PURE__*/_jsxDEV(MusicCard, {\n            musica: musica,\n            image: artworkUrl100\n          }, trackName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 38\n          }, this);\n        });\n      }\n    };\n  }\n\n  // Assim que carrega a pag, chamo minha API pra pegar as musicas pelo id, e salvo dentro do meu state musicas.\n  componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    getMusics(id).then(musicas => this.setState({\n      musicas\n    }));\n  } // Função que me traz todos os dados do Album\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageAlbum\",\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), this.album(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AllMusicCards\",\n        children: this.musicas()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  })\n}.isRequired;\nexport default Album;","map":{"version":3,"sources":["/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/pages/Album.js"],"names":["React","PropTypes","Header","getMusics","MusicCard","Album","Component","state","musicas","album","artistName","collectionName","artworkUrl100","map","musica","index","trackName","componentDidMount","match","params","id","props","then","setState","render","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD0B;;AAAA,SAYlCC,KAZkC,GAY1B,MAAM;AACZ,YAAM;AAAED,QAAAA;AAAF,UAAc,KAAKD,KAAzB;;AACA,UAAIC,OAAJ,EAAa;AACX,cAAM;AAAEE,UAAAA,UAAF;AAAcC,UAAAA,cAAd;AAA8BC,UAAAA;AAA9B,YAAgDJ,OAAO,CAAC,CAAD,CAA7D;AACA,4BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAK,YAAA,GAAG,EAAGI,aAAX;AAA2B,YAAA,GAAG,EAAGD;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,2BAAY,aAAhB;AAAA,sBAA+BD;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,2BAAY,YAAhB;AAAA,sBAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD;AACF,KAxBiC;;AAAA,SA2BhCH,OA3BgC,GA2BtB,MAAM;AACd,YAAM;AAAEA,QAAAA;AAAF,UAAc,KAAKD,KAAzB;;AACA,UAAIC,OAAJ,EAAa;AACX,cAAM;AAAEI,UAAAA;AAAF,YAAoBJ,OAAO,CAAC,CAAD,CAAjC;AACA,eACEA,OAAO,CACJK,GADH,CACO,CAACC,MAAD,EAASC,KAAT,KAAmB;AACtB,gBAAM;AAAEC,YAAAA;AAAF,cAAgBF,MAAtB;AACA,iBAAQC,KAAK,KAAK,CAAV,iBAAe,QAAC,SAAD;AAErB,YAAA,MAAM,EAAGD,MAFY;AAGrB,YAAA,KAAK,EAAGF;AAHa,aACfI,SADe;AAAA;AAAA;AAAA;AAAA,kBAAvB;AAKD,SARH,CADF;AAWD;AACF,KA3C+B;AAAA;;AAKlC;AACAC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKC,KAA3C;AACAlB,IAAAA,SAAS,CAACiB,EAAD,CAAT,CAAcE,IAAd,CAAoBd,OAAD,IAAa,KAAKe,QAAL,CAAc;AAAEf,MAAAA;AAAF,KAAd,CAAhC;AACD,GATiC,CAWlC;;;AAkCEgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,qBAAY,YAAvC;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEI,KAAKf,KAAL,EAFJ,eAGE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACI,KAAKD,OAAL;AADJ;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAvD+B;;AA0DpCH,KAAK,CAACoB,SAAN,GAAkB;AAChBP,EAAAA,KAAK,EAAEjB,SAAS,CAACyB,KAAV,CAAgB;AACrBP,IAAAA,MAAM,EAAElB,SAAS,CAACyB,KAAV,CAAgB;AACtBN,MAAAA,EAAE,EAAEnB,SAAS,CAAC0B;AADQ,KAAhB;AADa,GAAhB;AADS,EAMhBC,UANF;AAQA,eAAevB,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport '../css/album.css';\n\nclass Album extends React.Component {\n  state = {\n    musicas: '',\n  };\n\n  // Assim que carrega a pag, chamo minha API pra pegar as musicas pelo id, e salvo dentro do meu state musicas.\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    getMusics(id).then((musicas) => this.setState({ musicas }));\n  }\n\n  // Função que me traz todos os dados do Album\n  album = () => {\n    const { musicas } = this.state;\n    if (musicas) {\n      const { artistName, collectionName, artworkUrl100 } = musicas[0];\n      return (\n        <div className=\"albumCard\">\n          <img src={ artworkUrl100 } alt={ collectionName } />\n          <h4 data-testid=\"artist-name\">{artistName}</h4>\n          <h5 data-testid=\"album-name\">{collectionName}</h5>\n        </div>\n      );\n    }\n  }\n\n    // Função que percorre e tráz todos os dados de cada musica salva no meu state musicas; e o joga pra o componente MusicCard.\n    musicas = () => {\n      const { musicas } = this.state;\n      if (musicas) {\n        const { artworkUrl100 } = musicas[0];\n        return (\n          musicas\n            .map((musica, index) => {\n              const { trackName } = musica;\n              return (index !== 0 && <MusicCard\n                key={ trackName }\n                musica={ musica }\n                image={ artworkUrl100 }\n              />);\n            })\n        );\n      }\n    }\n\n    render() {\n      return (\n        <div className=\"pageAlbum\" data-testid=\"page-album\">\n          <Header />\n          { this.album() }\n          <div className=\"AllMusicCards\">\n            { this.musicas() }\n          </div>\n        </div>\n      );\n    }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}