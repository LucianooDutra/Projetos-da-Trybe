{"ast":null,"code":"var _jsxFileName = \"/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/pages/Search.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Carregando from '../components/Carregando';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport '../css/search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Search extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      disabled: true,\n      nomeArtista: '',\n      carregando: false,\n      nomeAlbum: null\n    };\n\n    this.countName = _ref => {\n      let {\n        target: {\n          value\n        }\n      } = _ref;\n      const sizeMin = 2;\n      const nomeArtista = value;\n      this.setState({\n        nomeArtista\n      });\n\n      if (value.length >= sizeMin) {\n        this.setState({\n          disabled: false\n        });\n        this.name = nomeArtista;\n      }\n    };\n\n    this.buscarAlbum = () => {\n      const {\n        nomeArtista\n      } = this.state;\n      this.setState({\n        carregando: true\n      });\n      searchAlbumsAPI(nomeArtista).then(result => {\n        this.setState({\n          carregando: false,\n          nomeAlbum: result,\n          nomeArtista: ''\n        });\n      });\n    };\n\n    this.album = () => {\n      const {\n        nomeAlbum\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: nomeAlbum.map(_ref2 => {\n          let {\n            collectionId,\n            artistName,\n            collectionName,\n            artworkUrl100\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Link, {\n            \"data-testid\": `link-to-album-${collectionId}`,\n            to: `/album/${collectionId}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: artworkUrl100,\n                alt: collectionName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: artistName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: collectionName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, collectionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.confirmarAlbum = () => {\n      const {\n        name,\n        state: {\n          nomeAlbum\n        }\n      } = this;\n\n      if (nomeAlbum) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: `Resultado de álbuns de: ${name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), nomeAlbum.length > 0 ? this.album() : /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Nenhum \\xE1lbum foi encontrado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      }\n    };\n\n    this.artista = () => {\n      const {\n        disabled,\n        nomeArtista\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"BuscarNomeArtista\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            // Defini meu value como meu nomeArtista porque assim que clicar pra pesquisar ele irá apagar.\n            value: nomeArtista,\n            \"data-testid\": \"search-artist-input\",\n            type: \"text\",\n            placeholder: \"Artist or band name\",\n            id: \"BuscarNomeArtista\",\n            className: \"BuscarNomeArtista\",\n            onChange: this.countName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"BotaoProcurarArtista\",\n          \"data-testid\": \"search-artist-button\",\n          disabled: disabled,\n          onClick: this.buscarAlbum,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  render() {\n    const {\n      carregando\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-search\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), this.artista(), carregando ? /*#__PURE__*/_jsxDEV(Carregando, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 24\n      }, this) : this.confirmarAlbum(), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/pages/Search.js"],"names":["React","Link","Header","Carregando","searchAlbumsAPI","Search","Component","state","disabled","nomeArtista","carregando","nomeAlbum","countName","target","value","sizeMin","setState","length","name","buscarAlbum","then","result","album","map","collectionId","artistName","collectionName","artworkUrl100","confirmarAlbum","artista","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Carregando from '../components/Carregando';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport '../css/search.css';\n\nclass Search extends React.Component {\n  state = {\n    disabled: true,\n    nomeArtista: '',\n    carregando: false,\n    nomeAlbum: null,\n  };\n\n  // Função que fiz a contagem de letras escritas pra liberar meu button\n  // peguei o valor e joguei pra o nome do meu artista\n  countName = ({ target: { value } }) => {\n    const sizeMin = 2;\n\n    const nomeArtista = value;\n\n    this.setState({ nomeArtista });\n\n    if (value.length >= sizeMin) {\n      this.setState({ disabled: false });\n      this.name = nomeArtista;\n    }\n  }\n\n  // Função pra pegar o album pesquisado dentro da minha API\n  // Enquanto busca aparece a mensagem carregando, e quando acha ela sai e aparece os resultados e apaga o valor do meu artista na pesquisa.\n  buscarAlbum = () => {\n    const { nomeArtista } = this.state;\n\n    this.setState({ carregando: true });\n\n    searchAlbumsAPI(nomeArtista).then((result) => {\n      this.setState({\n        carregando: false,\n        nomeAlbum: result,\n        nomeArtista: '',\n      });\n    });\n  }\n\n  // Função que vai me retornar como quero que meu album apareça\n  album = () => {\n    const { nomeAlbum } = this.state;\n    return (\n      <div>\n        {\n          nomeAlbum\n            .map(({ collectionId, artistName, collectionName, artworkUrl100 }) => (\n              <Link\n                key={ collectionId }\n                data-testid={ `link-to-album-${collectionId}` }\n                to={ `/album/${collectionId}` }\n              >\n                <div>\n                  <img src={ artworkUrl100 } alt={ collectionName } />\n                  <h4>{artistName}</h4>\n                  <h5>{collectionName}</h5>\n                </div>\n              </Link>\n            ))\n        }\n      </div>\n    );\n  }\n\n  // Função que compara caso não seja encontrado nenhum nome de artista ou encontrado.\n  // Se encontrado chama minha função do album, se não aparece o aviso de nenhum album encontrado.\n  confirmarAlbum = () => {\n    const { name, state: { nomeAlbum } } = this;\n    if (nomeAlbum) {\n      return (\n        <>\n          <h2>{`Resultado de álbuns de: ${name}`}</h2>\n          { nomeAlbum.length > 0\n            ? this.album()\n            : <h2>Nenhum álbum foi encontrado</h2> }\n        </>\n      );\n    }\n  }\n\n  artista = () => {\n    const { disabled, nomeArtista } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"BuscarNomeArtista\">\n          <input\n          // Defini meu value como meu nomeArtista porque assim que clicar pra pesquisar ele irá apagar.\n            value={ nomeArtista }\n            data-testid=\"search-artist-input\"\n            type=\"text\"\n            placeholder=\"Artist or band name\"\n            id=\"BuscarNomeArtista\"\n            className=\"BuscarNomeArtista\"\n            onChange={ this.countName }\n          />\n        </label>\n        <button\n          type=\"submit\"\n          className=\"BotaoProcurarArtista\"\n          data-testid=\"search-artist-button\"\n          disabled={ disabled }\n          onClick={ this.buscarAlbum }\n        >\n          Search\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    const { carregando } = this.state;\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        { this.artista() }\n        { carregando ? <Carregando /> : this.confirmarAlbum() }\n        <p>Search</p>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}