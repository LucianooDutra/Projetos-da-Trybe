{"ast":null,"code":"var _jsxFileName = \"/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/pages/Favorites.js\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard'; // import { getFavoriteSongs } from '../services/favoriteSongsAPI';\n// TESTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nimport { getFavoriteSongs, addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Carregando from '../components/Carregando';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Favorites extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // musicas: '',\n      // carregando: true,\n      // TESTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!\n      carregando: false,\n      favorites: []\n    };\n\n    this.renderMusic = () => {\n      const {\n        favorites\n      } = this.state;\n      const {\n        artworkUrl100\n      } = favorites[0];\n      return favorites.map((musica, index) => {\n        const {\n          trackName\n        } = musica;\n        return index !== 0 && /*#__PURE__*/_jsxDEV(MusicCard, {\n          musica: musica,\n          image: artworkUrl100,\n          favSong: this.favSong // função que vai favoritas e desfavoritar\n          ,\n          isChecked: favorites.some(saved => saved.trackId === musica.trackId) // Verifica se ela ja estava favoritada\n\n        }, trackName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 34\n        }, this);\n      });\n    };\n  }\n\n  // componentDidUpdate() {\n  //   this.updateFavoritesSongs();\n  // }\n  // componentDidMount = async () => {\n  //   const musicas = await getFavoriteSongs();\n  //   this.setState({\n  //     carregando: false,\n  //     musicas,\n  //   });\n  // }\n  // updateFavoritesSongs = () => {\n  //   const { carregando } = this.state;\n  //   getFavoriteSongs().then((musicas) => {\n  //     if (carregando) {\n  //       this.setState(() => ({\n  //         musicas,\n  //         carregando: false,\n  //       }));\n  //     }\n  //   });\n  // };\n  // handleChange = () => {\n  //   this.setState({ carregando: true });\n  // };\n  // TESTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  async componentDidMount() {\n    this.setState({\n      carregando: true\n    });\n    const favSongs = await getFavoriteSongs();\n    this.setState({\n      carregando: false,\n      favorites: favSongs\n    });\n  }\n\n  async favSong(_ref) {\n    let {\n      target\n    } = _ref;\n\n    if (target.checked) {\n      this.setState({\n        carregando: true\n      });\n      await addSong(JSON.parse(target.name));\n      const favSongs = await getFavoriteSongs();\n      this.setState({\n        carregando: false,\n        favorites: favSongs\n      });\n    } else {\n      this.setState({\n        carregando: true\n      });\n      await removeSong(JSON.parse(target.name));\n      const favSongs = await getFavoriteSongs();\n      this.setState({\n        carregando: false,\n        favorites: favSongs\n      });\n    }\n  } // renderMusic = () => {\n  //   const { musicas } = this.state;\n  //   if (musicas) {\n  //     return musicas.map((musica) => (\n  //       <MusicCard\n  //         musica={ musica }\n  //         key={ musica.trackName }\n  //         onChange={ this.handleChange }\n  //         image={ musica.artworkUrl100 }\n  //       />\n  //     ));\n  //   }\n  // };\n\n\n  render() {\n    // const { musicas } = this.state;\n    const {\n      carregando\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-favorites\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: carregando ? /*#__PURE__*/_jsxDEV(Carregando, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 26\n        }, this) : this.renderMusic()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"sources":["/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/pages/Favorites.js"],"names":["React","Header","MusicCard","getFavoriteSongs","addSong","removeSong","Carregando","Favorites","Component","state","carregando","favorites","renderMusic","artworkUrl100","map","musica","index","trackName","favSong","some","saved","trackId","componentDidMount","setState","favSongs","target","checked","JSON","parse","name","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\n// import { getFavoriteSongs } from '../services/favoriteSongsAPI';\n// TESTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\nimport { getFavoriteSongs, addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Carregando from '../components/Carregando';\n\nclass Favorites extends React.Component {\n  state = {\n    // musicas: '',\n    // carregando: true,\n    // TESTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    carregando: false,\n    favorites: [],\n  };\n\n  // componentDidUpdate() {\n  //   this.updateFavoritesSongs();\n  // }\n\n  // componentDidMount = async () => {\n  //   const musicas = await getFavoriteSongs();\n  //   this.setState({\n  //     carregando: false,\n  //     musicas,\n  //   });\n  // }\n\n  // updateFavoritesSongs = () => {\n  //   const { carregando } = this.state;\n  //   getFavoriteSongs().then((musicas) => {\n  //     if (carregando) {\n  //       this.setState(() => ({\n  //         musicas,\n  //         carregando: false,\n  //       }));\n  //     }\n  //   });\n  // };\n\n  // handleChange = () => {\n  //   this.setState({ carregando: true });\n  // };\n\n  // TESTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  async componentDidMount() {\n    this.setState({ carregando: true });\n    const favSongs = await getFavoriteSongs();\n    this.setState({ carregando: false, favorites: favSongs });\n  }\n\n  async favSong({ target }) {\n    if (target.checked) {\n      this.setState({ carregando: true });\n      await addSong(JSON.parse(target.name));\n      const favSongs = await getFavoriteSongs();\n      this.setState({ carregando: false, favorites: favSongs });\n    } else {\n      this.setState({ carregando: true });\n      await removeSong(JSON.parse(target.name));\n      const favSongs = await getFavoriteSongs();\n      this.setState({ carregando: false, favorites: favSongs });\n    }\n  }\n\n  // renderMusic = () => {\n  //   const { musicas } = this.state;\n\n  //   if (musicas) {\n  //     return musicas.map((musica) => (\n  //       <MusicCard\n  //         musica={ musica }\n  //         key={ musica.trackName }\n  //         onChange={ this.handleChange }\n  //         image={ musica.artworkUrl100 }\n  //       />\n  //     ));\n  //   }\n  // };\n\n  renderMusic = () => {\n    const { favorites } = this.state;\n    const { artworkUrl100 } = favorites[0];\n    return (\n      favorites\n        .map((musica, index) => {\n          const { trackName } = musica;\n          return (index !== 0 && <MusicCard\n            key={ trackName }\n            musica={ musica }\n            image={ artworkUrl100 }\n            favSong={ this.favSong } // função que vai favoritas e desfavoritar\n            isChecked={ favorites.some((saved) => saved.trackId === musica.trackId) } // Verifica se ela ja estava favoritada\n          />);\n        })\n    );\n  }\n\n  render() {\n    // const { musicas } = this.state;\n    const { carregando } = this.state;\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        <div>\n          {/* {!musicas ? <Carregando /> : this.renderMusic()} */}\n          { carregando ? <Carregando /> : this.renderMusic() }\n        </div>\n        <p>Favorites</p>\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n"]},"metadata":{},"sourceType":"module"}