{"ast":null,"code":"var _jsxFileName = \"/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      musicas: ''\n    };\n\n    this.renderAlbumCard = () => {\n      const {\n        musicas\n      } = this.state;\n\n      if (musicas) {\n        const {\n          artistName,\n          collectionName,\n          artworkUrl100\n        } = musicas[0];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: artworkUrl100,\n            alt: collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            \"data-testid\": \"artist-name\",\n            children: artistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            \"data-testid\": \"album-name\",\n            children: collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.renderMusics = () => {\n      const {\n        musicas\n      } = this.state;\n\n      if (musicas) {\n        const {\n          artworkUrl100\n        } = musicas[0];\n        return musicas.map((musica, index) => {\n          const {\n            trackName\n          } = musica;\n          return index !== 0 && /*#__PURE__*/_jsxDEV(MusicCard, {\n            music: musica,\n            image: artworkUrl100\n          }, trackName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 36\n          }, this);\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    getMusics(id).then(musicas => this.setState({\n      musicas\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), this.renderAlbumCard(), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.renderMusics()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  })\n}.isRequired;\nexport default Album;","map":{"version":3,"sources":["/home/luciano/projetos/projeto-14-TrybeTunes/sd-021-a-project-trybetunes/src/pages/Album.js"],"names":["React","PropTypes","Header","getMusics","MusicCard","Album","Component","state","musicas","renderAlbumCard","artistName","collectionName","artworkUrl100","renderMusics","map","musica","index","trackName","componentDidMount","match","params","id","props","then","setState","render","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD0B;;AAAA,SAUlCC,eAVkC,GAUhB,MAAM;AACtB,YAAM;AAAED,QAAAA;AAAF,UAAc,KAAKD,KAAzB;;AACA,UAAIC,OAAJ,EAAa;AACX,cAAM;AAAEE,UAAAA,UAAF;AAAcC,UAAAA,cAAd;AAA8BC,UAAAA;AAA9B,YAAgDJ,OAAO,CAAC,CAAD,CAA7D;AACA,4BACE;AAAA,kCACE;AAAK,YAAA,GAAG,EAAGI,aAAX;AAA2B,YAAA,GAAG,EAAGD;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,2BAAY,aAAhB;AAAA,sBAA+BD;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,2BAAY,YAAhB;AAAA,sBAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD;AACF,KAtBiC;;AAAA,SAwBlCE,YAxBkC,GAwBnB,MAAM;AACnB,YAAM;AAAEL,QAAAA;AAAF,UAAc,KAAKD,KAAzB;;AACA,UAAIC,OAAJ,EAAa;AACX,cAAM;AAAEI,UAAAA;AAAF,YAAoBJ,OAAO,CAAC,CAAD,CAAjC;AACA,eACEA,OAAO,CACJM,GADH,CACO,CAACC,MAAD,EAASC,KAAT,KAAmB;AACtB,gBAAM;AAAEC,YAAAA;AAAF,cAAgBF,MAAtB;AACA,iBAAQC,KAAK,KAAK,CAAV,iBAAe,QAAC,SAAD;AAErB,YAAA,KAAK,EAAGD,MAFa;AAGrB,YAAA,KAAK,EAAGH;AAHa,aACfK,SADe;AAAA;AAAA;AAAA;AAAA,kBAAvB;AAKD,SARH,CADF;AAWD;AACF,KAxCiC;AAAA;;AAKlCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKC,KAA3C;AACAnB,IAAAA,SAAS,CAACkB,EAAD,CAAT,CAAcE,IAAd,CAAoBf,OAAD,IAAa,KAAKgB,QAAL,CAAc;AAAEhB,MAAAA;AAAF,KAAd,CAAhC;AACD;;AAkCDiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEI,KAAKhB,eAAL,EAFJ,eAGE;AAAA,kBACI,KAAKI,YAAL;AADJ;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AArDiC;;AAwDpCR,KAAK,CAACqB,SAAN,GAAkB;AAChBP,EAAAA,KAAK,EAAElB,SAAS,CAAC0B,KAAV,CAAgB;AACrBP,IAAAA,MAAM,EAAEnB,SAAS,CAAC0B,KAAV,CAAgB;AACtBN,MAAAA,EAAE,EAAEpB,SAAS,CAAC2B;AADQ,KAAhB;AADa,GAAhB;AADS,EAMhBC,UANF;AAQA,eAAexB,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\n\nclass Album extends React.Component {\n  state = {\n    musicas: '',\n  };\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    getMusics(id).then((musicas) => this.setState({ musicas }));\n  }\n\n  renderAlbumCard = () => {\n    const { musicas } = this.state;\n    if (musicas) {\n      const { artistName, collectionName, artworkUrl100 } = musicas[0];\n      return (\n        <div>\n          <img src={ artworkUrl100 } alt={ collectionName } />\n          <h4 data-testid=\"artist-name\">{artistName}</h4>\n          <h5 data-testid=\"album-name\">{collectionName}</h5>\n        </div>\n      );\n    }\n  }\n\n  renderMusics = () => {\n    const { musicas } = this.state;\n    if (musicas) {\n      const { artworkUrl100 } = musicas[0];\n      return (\n        musicas\n          .map((musica, index) => {\n            const { trackName } = musica;\n            return (index !== 0 && <MusicCard\n              key={ trackName }\n              music={ musica }\n              image={ artworkUrl100 }\n            />);\n          })\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        { this.renderAlbumCard() }\n        <div>\n          { this.renderMusics() }\n        </div>\n        <p>Album</p>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}